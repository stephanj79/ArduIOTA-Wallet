<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">

    <meta http-equiv="cache-control" content="max-age=0" />
    <meta http-equiv="cache-control" content="no-cache" />
    <meta http-equiv="expires" content="0" />
    <meta http-equiv="expires" content="Tue, 01 Jan 1980 1:00:00 GMT" />
    <meta http-equiv="pragma" content="no-cache" />

    <title>ArduIOTA Seedkeeper</title>
    <link rel="shortcut icon" href="favicon.ico">

    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300" rel="stylesheet">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u"
        crossorigin="anonymous">
    <style>
        body,
        .modal-backdrop {
            font-family: 'Open Sans', sans-serif;
            /* Permalink - use to edit and share this gradient: http://colorzilla.com/gradient-editor/#407889+0,08585e+100 */
            background: #372c40;
            /* Old browsers */
            background: -moz-radial-gradient(center, ellipse cover, #372c40 0%, #033c40 100%);
            /* FF3.6-15 */
            background: -webkit-radial-gradient(center, ellipse cover, #372c40 0%, #033c40 100%);
            /* Chrome10-25,Safari5.1-6 */
            background: radial-gradient(ellipse at center, #372c40 0%, #033c40 100%);
            /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
            filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#372c40   ', endColorstr='#033c40 ', GradientType=1);
            /* IE6-9 fallback on horizontal gradient */
        }

        .btn-default {
            transition: all 0.5s ease;
            background-color: transparent;
            color: #fff;
        }

        .btn-default:hover {
            color: #fff;
            background-color: #1e4b54;
        }

        .btn-default:active,
        .btn-default:focus {
            background: rgba(21, 104, 130, 0.28);
            color: #fff;
        }

        .input-group-addon {
            padding: 4px 12px;
        }

        .txdatetime {
            position: absolute;
            bottom: 0;
            right: 16px;
        }

        .msg {
            font-size: 20px;
            min-height: 26px;
        }

        .black {
            color: #000;
        }

        #oldAddresses {
            height: 400px;
            overflow-y: scroll;
            margin-bottom: 25px;
        }

        .list-group-item-text>a {
            color: #fff;
            position: absolute;
            font-size: 18px;
        }

        header {
            background: transparent;
            box-shadow: 5px 5px 22px 0px rgba(0, 0, 0, 1);
            margin-top: -1px!important;
        }

        .headerlogo {
            width: 158px;
            margin: 25px;
        }

        .header-balance {
            right: 0;
            position: fixed;
            top: 0;
        }

        .mymwm {
            margin-top: 25px;
        }

        #iotanode {
            position: absolute;
            right: 10px;
            margin-top: -10px;
            font-size: 12px;
        }

        #customHostPortDiv {
            margin: 14px;
        }

        .row,
        .container-fluid {
            margin: 0;
            padding: 0;
        }

        .col-md-8,
        col-md-4 {
            padding: 0;
        }

        #btnmenu>.btn {
            height: 200px;
            box-shadow: 5px 5px 22px 0px rgba(0, 0, 0, 1);
        }

        .header-balance {
            color: #fff;
            font-size: 36px;
            margin: 14px;
        }

        .badge {
            color: #fff;
            float: right;
            font-size: 40px;
        }

        .list-group-item {
            color: #fff;
            background: transparent;
        }

        .list-group-item-text {
            font-size: 14px;
        }

        #spende {
            height: 22px;
            color: #fff;
            margin: 0 auto;
            text-align: center;
            margin-top: 10px;
            background: rgb(11, 31, 33);
        }

        #spende>a {
            color: #fff;
        }

        #transactionen {
            height: 800px;
            overflow-y: scroll;
        }

        #btnmenu {
            padding-left: 14px;
        }

        #transactionen>li {
            list-style: none;
            box-shadow: 5px 5px 22px 0px rgba(0, 0, 0, 1);
            margin: 11px;
            border-radius: 5px;
            min-height: 194px;
        }

        .glyphicon-arrow-left,
        .glyphicon-arrow-right {
            float: right;
            padding: 8px;
            font-size: 22px;
        }

        .red {
            color: red;
        }

        .green {
            color: green;
        }

        .bgred {
            background: red;
        }

        .bggreen {
            background: green;
        }

        #select_einheit {
            width: 100px;
            float: right;
            margin-top: -138px;
            margin-right: 14px;
        }

        #allAddresses {
            font-size: 13px;
        }

        .modal-backdrop.show {
            opacity: 0.9!important;
        }

        #txtModal {
            margin: 168px;
        }

        .send {
            max-width: 800px;
            width: 100%;
            margin: -130px auto -180px auto;
            border-collapse: collapse;
            box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);
            position: relative;
            top: -180px;
        }

        .sendheader {
            margin-top: -112px;
            font-size: 38px;
            font-weight: 100;
            color: #fff;
            padding: 24px;
            text-shadow: 0 1px 1px rgba(0, 0, 0, 0.1);
            vertical-align: middle;
            text-align: center;
        }

        .sendbody {
            text-shadow: 0 1px 1px rgba(0, 0, 0, 0.1);
            background-color: #fff;
            padding: 24px;
        }

        .sendbody-title {
            font-size: 32px;
            font-weight: 100;
            text-shadow: 0 1px 1px rgba(0, 0, 0, 0.1);
            margin: 20px 0 40px;
            vertical-align: middle;
            text-align: center;
        }

        .sendlogo {
            width: 34px;
            height: 34px;
            margin: 0 8px;
        }

        .sendbutton {
            text-align: center;
            margin: 20px 0;
        }

        #send_waiting {
            display: none;
        }

        .send_waiting-title {
            font-size: 32px;
            font-weight: 100;
            text-shadow: 0 1px 1px rgba(0, 0, 0, 0.1);
            margin: 20px 0;
            vertical-align: middle;
            text-align: center;
            border-bottom: 4px solid #ccc;
        }

        .btn-reattach {
            float: right;
            margin-top: -25px;
        }

        .image {
            position: absolute;
            top: 25%;
            left: 50%;
            width: 120px;
            height: 120px;
            margin: 160px 0 0 -60px;
            -webkit-animation: spin 4s linear infinite;
            -moz-animation: spin 4s linear infinite;
            animation: spin 4s linear infinite;
        }

        @-moz-keyframes spin {
            100% {
                -moz-transform: rotate(360deg);
            }
        }

        @-webkit-keyframes spin {
            100% {
                -webkit-transform: rotate(360deg);
            }
        }

        @keyframes spin {
            100% {
                -webkit-transform: rotate(360deg);
                transform: rotate(360deg);
            }
        }
    </style>

</head>

<body>
    <main class="container-fluid">
        <header class="row">
            <img class="headerlogo" src="https://mybcard.de/logo.png" /><span class="brand">IOTA</span>
            <div class="row">

                <div class="header-balance">
                    Balance: <span class="label label-default" id="iotabalanceheader">0</span>
                </div>
                <span class="label label-default" id="iotanode"></span>
                <div class="form-group">
                    <select class="form-control" id="select_einheit">
                      <option value="i">i</option>
                      <option value="Ki">Ki</option>
                      <option value="Mi">Mi</option>
                      <option value="Gi" selected>Gi</option>
                      <option value="Ti">Ti</option>
                      <option value="Pi">Pi</option>
                    </select>
                </div>
            </div>
            <div class="row">

            </div>
        </header>
        <section class="sendsection row">
            <div class="col-md-4" id="btnmenu">
                <button type="button" class="btn btn-default btn-block btn-lg glyphicon glyphicon-send" data-toggle="modal" data-target="#myModalSendIOTA"></button>
                <button type="button" class="btn btn-default btn-block btn-lg glyphicon glyphicon-list-alt" data-toggle="modal" data-target="#myModalGenerateAdress"></button>
                <button type="button" class="btn btn-default btn-block btn-lg glyphicon glyphicon-cog" data-toggle="modal" data-target="#myModalConfig"></button>
                <button type="button" class="btn btn-default btn-block btn-lg glyphicon glyphicon-refresh" onclick="refresh()"></button>
            </div>

            <div class="col-md-8">
                <div class="sendheader">
                    <p class="sendheader-title">Transactions</p>
                </div>
                <p id="transactionen"></p>
            </div>
        </section>
    </main>
    <div class="modal fade" id="myModalSendIOTA" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">
                        <img class="sendlogo" src="https://mybcard.de/logo-black.png" /> Balance: <span class="label label-default"
                            id="iotabalance">0</span>
                    </h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body">
                    <div class="sendbody">
                        <div class="row">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                <label for="value">Value</label>
                                <div class="input-group">
                                    <input type="number" class="form-control" id="value" placeholder="Value to Send">
                                    <span class="input-group-addon">
                                        <select id="select_einheit_senden">
                                            <option value="i">i</option>
                                            <option value="Ki">Ki</option>
                                            <option value="Mi">Mi</option>
                                            <option value="Gi" selected>Gi</option>
                                            <option value="Ti">Ti</option>
                                            <option value="Pi">Pi</option>
                                        </select>
                                    </span>
                                </div>
                            </div>
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                <div class="form-group">
                                    <label for="address">Recipient Address</label>
                                    <input type="text" class="form-control" id="address" placeholder="IOTA address of recipient">
                                </div>
                            </div>
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                <div class="form-group">
                                    <label for="message">Text Area</label>
                                    <textarea id="message" class="form-control" rows="3" placeholder="Message to send"></textarea>
                                </div>
                            </div>
                        </div>
                        <div id="send_success"></div>
                        <div id="send_waiting">
                            <div class="row">
                                <div class="progress">
                                    <div class="progress-bar progress-bar-striped active" role="progressbar" aria-valuenow="40" aria-valuemin="0" aria-valuemax="100"
                                        style="width:100%">
                                        <p>Doing Proof of Work. Please be patient!</p>
                                    </div>
                                </div>
                            </div>

                            <div class="alert alert-success" role="alert">
                                <p>While waiting, you can read more about the <a href="https://dev.iota.org" class="alert-link">IOTA API here.</a>Or
                                    you can read our Blog on <a href="https://medium.com/iotatangle" class="alert-link">Medium</a>.
                                    Always useful to know this stuff.
                                    <p>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="sendbutton">
                        <button class="btn btn-success btn-lg" id="submit" onclick="Submit()">Submit</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="myModalGenerateAdress" role="dialog">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Generate Addresse</h4>
                </div>
                <div class="modal-body">
                    <div class="genAddress__div">
                        <div id="oldAddresses">
                        </div>
                        <div id="allAddresses">
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" id="genAddress" class="btn btn-block btn-lg btn-success" onclick="GenAddress()">Generate Address</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="myModalConfig" role="dialog">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Nodes</h4>
                </div>
                <div class="modal-body">
                    <select class="form-control" id="select_host">
                        <!--<option value="http://service.iotasupport.com:14265">http://service.iotasupport.com:14265</option>
                        <option value="http://eugene.iota.community:14265">http://eugene.iota.community:14265</option>
                        <option value="http://eugene.iotasupport.com:14999">http://eugene.iotasupport.com:14999</option>
                        <option value="http://eugeneoldisoft.iotasupport.com:14265">http://eugeneoldisoft.iotasupport.com:14265</option>
                        <option value="http://node01.iotatoken.nl:14265">http://node01.iotatoken.nl:14265</option>
                        <option value="http://node02.iotatoken.nl:14265">http://node02.iotatoken.nl:14265</option>
                        <option value="http://node03.iotatoken.nl:15265">http://node03.iotatoken.nl:15265</option>
                        <option value="http://node.deviceproof.org:1426">http://node.deviceproof.org:1426</option>
                        <option value="http://mainnet.necropaz.com:14500">http://mainnet.necropaz.com:14500</option>
                        <option value="http://5.9.149.169:14265">http://5.9.149.169:14265</option>
                        <option value="http://iota.digits.blue:14265">http://iota.digits.blue:14265</option>
                        <option value="http://wallets.iotamexico.com:80">http://wallets.iotamexico.com:80</option>
                        <option value="http://5.9.137.199:14265">http://5.9.137.199:14265</option>
                        <option value="http://5.9.118.112:14265">http://5.9.118.112:14265</option>
                        <option value="http://5.9.149.169:14265">http://5.9.149.169:14265</option>
                        <option value="http://88.198.230.98:14265">http://88.198.230.98:14265</option>
                        <option value="http://176.9.3.149:14265">http://176.9.3.149:14265</option>
                        <option value="https://n1.iota.nu:443" selected>https://n1.iota.nu:443</option>
                        <option value="http://node.lukaseder.de:14265">http://node.lukaseder.de:14265</option>-->
                        <option value="http://node.iotawallet.info:14265" data-options='{"mwm":"14"}'>http://node.iotawallet.info:14265 - MAINNET</option>
                        <option value="http://p101.iotaledger.net:14700" data-options='{"mwm":"9"}'>http://p101.iotaledger.net:14700 - TESTNET</option>
                        <option value="custom">custom</option>
                      </select>
                    <div class="hide row" id="customHostPortDiv">
                        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                            <div class="form-group">
                                <label for="customhost">Custom Host</label>
                                <input type="text" class="form-control" id="customhost" placeholder="IOTA host adresse">
                            </div>
                        </div>
                        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                            <div class="form-group">
                                <label for="customport">Custom Port</label>
                                <input type="text" class="form-control" id="customport" placeholder="IOTA host port">
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 mymwm">
                        <div class="form-group">
                            <label for="customhost">MWM</label>
                            <input type="text" class="form-control" id="mwm" placeholder="">
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-success btn-lg btn-block hide" id="submitcustomhost">Save</button>
                    <div class="alert alert-success hide" id="hostchangetext">
                        <strong>Success!</strong> changed...
                    </div>

                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="pleaseWaitDialog" data-backdrop="static" data-keyboard="false">
        <img class="image" src="https://mybcard.de/logo.png" alt="" width="120" height="120">
        <h1 id="txtModal" style="color: #fff;"></h1>
    </div>
    <div id="spende">
        Donate IOTA: <a href="#" id="btndonateme"></a>
    </div>

    <script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="
        crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js" integrity="sha384-b/U6ypiBEHpOf/4+1nzFpr53nxSS+GLCkfwBdFNTxtclqqenISfwAzpKaMNFNmj4"
        crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa"
        crossorigin="anonymous"></script>
    <script src="https://mybcard.de/iota.js"></script>
    <script>
        var seed = ""; // <<<------- SEED
        var spendeaddresse = "BEDYKJPMSMKBHCMLZNSODECPNTO9TJNQHXTWVPJRBVDQDPDD9NDARDORDYOCYOZAGEQE9XTFIALNSIIPXWCBC9ESBX";

        var host = (localStorage.getItem('host') != null ? localStorage.getItem('host') : 'http://node.iotawallet.info');
        var port = (localStorage.getItem('port') != null ? localStorage.getItem('port') : 14265);
        var mwm = (localStorage.getItem('mwm') != null ? localStorage.getItem('mwm') : 14);

        var balance = 0;
        var address;
        var addressWithoutChkSum;
        var einheit = 'Gi';
        var einheitOld = 'i';
        var txtModal = "";
        var addresses;
        var stop = false;
        var getAccountInterval = 60; // in seconds

        var iota = new IOTA({ 'host': host, 'port': port });

        SetHost(host, port);

        $(document).ready(function () {
            $("#select_einheit").change(function (e) {
                einheitOld = einheit;
                einheit = $(this).val();
                updateBalanceHTML(balance, false);
                $("#select_einheit_senden").val(einheit);
            });
            $("#select_einheit_senden").change(function (e) {
                einheitOld = einheit;
                einheit = $(this).val();
                updateBalanceHTML(balance, false);
                $("#select_einheit").val(einheit);
            });
            $("#select_host").change(function (e) {
                if ($(this).val() == "custom") {
                    $('#customHostPortDiv').removeClass("hide");
                    $('#submitcustomhost').removeClass("hide");
                }
                else {
                    var h = $(this).val().substring(0, $(this).val().lastIndexOf(":"));
                    var p = $(this).val().substring($(this).val().lastIndexOf(":") + 1);
                    $('#mwm').val($(this).find(':selected').data('options').mwm);
                    SetMWM();
                    SetHost(h, p);
                    $('#hostchangetext').removeClass('hide').delay(2000).fadeOut(1000);
                    hidePleaseWaitDiv('#myModalConfig', false);
                    stop = false;
                    refresh();
                }
            });

            $('#submitcustomhost').click(function () {
                SetMWM();
                SetHost($('#customhost').val(), $('#customport').val());
                $('#hostchangetext').removeClass('hide').delay(2000).fadeOut(1000);
                hidePleaseWaitDiv('#myModalConfig', false);
                stop = false;
                refresh();
            });

            $('#btndonateme').click(function () {
                $('#myModalSendIOTA').modal("show");
                $('#address').val(spendeaddresse);
                $('#message').val("Donate from ");
            });

            $('#mwm').keyup(function () {
                SetMWM();
            });

            if ($("#select_host:contains('" + host + ":" + port + "')").length == 0) {
                $("#select_host").append($('<option>', {
                    value: host + ":" + port,
                    text: host + ":" + port
                }));
            }

            $('.modal').on('show.bs.modal', function (e) {
                stop = true;
            });

            $('.modal').on('hide.bs.modal', function (e) {
                stop = false;
            });

            $('#mwm').val(mwm);
            $("#select_host").val(host + ":" + port);
            document.getElementById('btndonateme').innerHTML = spendeaddresse;
            setInterval(getAccountInfo, 1000 * getAccountInterval);
        });

        // function for creating the notification
        function notifyMe(t) {
            // Let's check if the browser supports notifications
            if (!("Notification" in window)) {
                alert("This browser does not support desktop notification");
            }

            // Let's check whether notification permissions have alredy been granted
            else if (Notification.permission === "granted") {
                // If it's okay let's create a notification
                var notification = new Notification('ArduIOTA Seedkeeper Wallet', {
                    icon: 'https://mybcard.de/logo-black.png',
                    body: t,
                });
                setTimeout(notification.close.bind(notification), 4000);
            }

            // Otherwise, we need to ask the user for permission
            else if (Notification.permission !== 'denied') {
                Notification.requestPermission(function (permission) {
                    // If the user accepts, let's create a notification
                    if (permission === "granted") {
                        var notification = new Notification('ArduIOTA Seedkeeper Wallet', {
                            icon: 'https://mybcard.de/logo-black.png',
                            body: t,
                        });
                        setTimeout(notification.close.bind(notification), 4000);
                    }
                });
            }

            // At last, if the user has denied notifications, and you 
            // want to be respectful there is no need to bother them any more.
        }

        function SetMWM() {
            mwm = $('#mwm').val();
            localStorage.setItem('mwm', mwm);
        }

        function SetHost(h, p) {
            host = h;
            port = p;
            iota = new IOTA({ 'host': h, 'port': p });
            localStorage.setItem('host', h);
            localStorage.setItem('port', p);
            iota.api.getNodeInfo(function (e, data) {
                if (e == undefined) {
                    document.getElementById('iotanode').innerHTML = h + ":" + p + " - " + data.appName + " Version:" + data.appVersion;
                    notifyMe("Success set Node to: " + h + ":" + p);
                }
                else {
                    document.getElementById('iotanode').innerHTML = e.message;
                    notifyMe("Success set Node to: " + h + ":" + p);
                }
            });
        }

        function updateBalanceHTML(balance, angleichen) {
            if (angleichen) {
                if (balance < 999) {
                    einheit = 'i';
                }
                else if (balance < 999999) {
                    einheit = 'Ki';
                }
                else if (balance < 999999999) {
                    einheit = 'Mi';
                }
                else if (balance < 999999999999) {
                    einheit = 'Gi';
                }
                else if (balance < 999999999999999) {
                    einheit = 'Ti';
                }
                else if (balance < 999999999999999999) {
                    einheit = 'Pi';
                }
                $("#select_einheit").val(einheit);
                $("#select_einheit_senden").val(einheit);
            }
            document.getElementById('iotabalance').innerHTML = iota.utils.convertUnits(balance, 'i', einheit) + einheit;
            document.getElementById('iotabalanceheader').innerHTML = iota.utils.convertUnits(balance, 'i', einheit) + einheit;
        }

        function updateAddressHTML(address) {
            if (!address)
                return
            var html = '<div class="panel panel-default"><div class="panel-heading">Address</div><div class="panel-body">' + address + '</div></div>'
            document.getElementById('allAddresses').innerHTML = html;
        }

        function updateOldAddressHTML(oldaddress) {
            if (!oldaddress)
                return
            var html = '<ul class="list-group">'
            oldaddress.forEach(function (element) {
                html += '<li class="list-group-item"><span class="black">' + iota.utils.addChecksum(element) + '</span></li>';
            }, this);
            html += '</ul>';
            document.getElementById('oldAddresses').innerHTML = html;
        }

        function SeedSubmit() {
            showPleaseWait('Get account from ' + host + ":" + port, 100);
            getAccountInfo();
        }

        function getAccountInfo() {
            if (!stop) {
                return new Promise(function (resolve, reject) {
                    iota.api.getAccountData(seed, function (e, accountData) {
                        if (!e) {
                            console.log("Account data", accountData);
                            if (!address && accountData.addresses != undefined && accountData.addresses[0]) {
                                address = iota.utils.addChecksum(accountData.addresses[accountData.addresses.length - 1]);
                                updateAddressHTML(address);
                                updateOldAddressHTML(accountData.addresses)
                                addresses = accountData.addresses;
                            }
                            BuildTransfer(accountData.transfers);
                            balance = accountData.balance;
                            updateBalanceHTML(balance, true);
                            hidePleaseWaitDiv("#pleaseWaitDialog", true);
                        }
                    })
                })
            }
        }

        function reattach(trTx, brTx, mwm, txBundle) {
            var array = txBundle.split(",");
            iota.api.attachToTangle(trTx, brTx, parseInt(mwm), array, function (e, r) {
                if (!e) {
                    notifyMe("Successful AttachToTangle");
                    getAccountInfo();
                }
            });
        }

        function BuildTransfer(transfers) {
            transactionen.innerHTML = '<div class="list-group">';

            for (var i = 0; i < transfers.length; i++) {
                var msg = "";
                var message = iota.utils.extractJson(transfers[i]);
                console.log("Extracted JSON from Transaction: ", message);
                if (message != null) {
                    message = JSON.parse(message);
                    console.log("JSON: ", message);
                    msg = message.message;
                }
                if (transfers[i].length > 1) {
                    var tryArray = new Array();
                    for(var j = 0;j<transfers[i].length;j++)
                    {
                        var t = iota.utils.transactionTrytes(transfers[i][j]);
                        tryArray.push(t);
                    }
                    var date = new Date(transfers[i][0].timestamp * 1000);
                    transactionen.innerHTML = '<li class="list-group-item">'
                        + '<span class="badge'
                        + (addresses.indexOf(transfers[i][0].address) > -1 ? ' bggreen' : ' bgred')
                        + '">' + transfers[i][0].value + '<span class="einheit">i</span></span>'
                        + '<div class="alert alert-default" role="alert">'
                        + (transfers[i][0].persistence == true ? '<span class="glyphicon glyphicon-ok" title="Status: Ok" aria-hidden="true"></span>' : '<span class="glyphicon glyphicon-time" title="Status: Pending" aria-hidden="true"></span>')
                        + '</div>'
                        + '<div class="list-group-item-text">'
                        + '<p class="msg">'
                        + msg
                        + '</p>'
                        + '<p class="tag label label-default">'
                        + transfers[i][0].tag
                        + '</p><br><br>'
                        + '<a href="http://www.iota.tips/search/?kind=transaction&hash=' + transfers[i][0].hash + '" target="_blank">'
                        + iota.utils.addChecksum(transfers[i][0].address)
                        + '</a>'
                        + '</div>'
                        + '<p class="txdatetime">' + date.toLocaleString() + '</p>'
                        + (transfers[i][0].persistence == false ? '<button type="button" class="btn-reattach" onclick="reattach(\'' 
                        + transfers[i][0].trunkTransaction + '\',\'' 
                        + transfers[i][0].branchTransaction + '\',\'' 
                        + mwm + '\',\'' 
                        + tryArray
                        + '\')">Reattach</a>' : '')
                        + '</li>'
                        + transactionen.innerHTML;
                }
                else {
                    var date = new Date(transfers[i][0].timestamp * 1000);
                    transactionen.innerHTML = '<li class="list-group-item">'
                        + '<div class="alert alert-default" role="alert">'
                        + '<span class="glyphicon glyphicon-bookmark" aria-hidden="true"></span>'
                        + '</div>'
                        + '<div class="list-group-item-text">'
                        + '<p class="msg">'
                        + msg
                        + '</p>'
                        + '<a href="http://www.iota.tips/search/?kind=transaction&hash=' + transfers[i][0].hash + '" target="_blank">'
                        + iota.utils.addChecksum(transfers[i][0].address)
                        + '</a>'
                        + '</div>'
                        + '<p class="txdatetime">' + date.toLocaleString() + '</p>'
                        + '</li>'
                        + transactionen.innerHTML;
                }
            }
            transactionen.innerHTML += '</div>';
        }

        function genAddress() {
            console.log("Generating an address");
            notifyMe("Generate addresse... Please wait...");
            document.getElementById("allAddresses").innerHTML = "Generating an address";
            iota.api.getNewAddress(seed, { 'checksum': true }, function (e, address) {
                if (!e) {
                    console.log("NEW ADDRESS GENERATED: ", address)
                    address = address;
                    updateAddressHTML(address);
                    notifyMe("Generate addresse: " + address);
                    var transfer = [{
                        'address': address,
                        'value': 0
                    }]
                    return new Promise(function (resolve, reject) {
                        iota.api.sendTransfer(seed, 5, parseInt(mwm), transfer, function (e, s) {
                            if (!e) {
                                notifyMe("Successfully generated and attached address");
                                getAccountInfo();
                            }
                        })
                    });
                }
                else {
                    notifyMe(e.message);
                }
            })
        }

        function sendTransfer(address, value, messageTrytes) {
            if (iota.utils.isValidChecksum(address)) {
                stop = true;
                notifyMe("Sending IOTA to " + address + "... Please wait...");
                $('#send_waiting').show();
                var transfer = [{ 'address': address, 'value': parseInt(value), 'message': messageTrytes, 'tag': "ARDUIOTA9HARDWARE9WALLET" }]
                console.log("Sending Transfer", transfer);
                return new Promise(function (resolve, reject) {
                    iota.api.sendTransfer(seed, 5, parseInt(mwm), transfer, (e, r) => {
                        if (e !== null) {
                            console.log(e.message);
                            var html = '<div class="alert alert-danger alert-dismissible" role="alert"><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button><strong>ERROR!</strong>' + e + '.</div>'
                            document.getElementById('send_success').innerHTML = html;
                            notifyMe("Sending IOTA... Error...");
                        } else {
                            console.log(r);
                            var html = '<div class="alert alert-info  alert-dismissible" role="alert"><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button><strong>Success!</strong> You have successfully sent your transaction. If you want to make another one make sure that this transaction is confirmed first (check in your client).</div>'
                            document.getElementById('send_success').innerHTML = html;
                            if (address == spendeaddresse) {
                                notifyMe("Sending IOTA... Successfull... THX ;D For your Donate");
                            }
                            else {
                                notifyMe("Sending IOTA... Successfull...");
                            }
                            getAccountInfo();
                        }
                        $('#send_waiting').hide();
                        stop = false;
                        hidePleaseWaitDiv("#pleaseWaitDialog", true);
                    })
                })
            }
            else {
                notifyMe("No Addresschecksum...");
            }
        }

        function GenAddress() {
            if (!seed)
                return;
            genAddress();
        }

        function Submit() {
            if (!seed) {
                var html = '<div class="alert alert-warning alert-dismissible" role="alert"><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button><strong>No Seed!</strong> You have not entered your seed yet. Do so on the Menu on the right.</div>'
                document.getElementById('send_success').innerHTML = html;
                notifyMe("There is no Seed");
                return
            }
            if (!balance || balance === 0) {
                var html = '<div class="alert alert-warning alert-dismissible" role="alert"><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button><strong>No Tokens!</strong> You do not have enough IOTA tokens. Make sure you have enough confirmed tokens.</div>'
                document.getElementById('send_success').innerHTML = html;
                notifyMe("Check your balance");
                return
            }
            var wert = document.getElementById('value').value;
            wert = iota.utils.convertUnits(wert, einheit, 'i');
            var value = parseInt(wert);
            var address = document.getElementById('address').value;
            var message = document.getElementById('message').value;

            if (address == "") {
                var html = '<div class="alert alert-warning alert-dismissible" role="alert"><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button><strong>No addresse!</strong> You have no address to send.</div>'
                document.getElementById('send_success').innerHTML = html;
                notifyMe("Check address");
                return
            }
            if (!value) {
                var html = '<div class="alert alert-warning alert-dismissible" role="alert"><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button><strong>No Value!</strong> You have specified no value.</div>'
                document.getElementById('send_success').innerHTML = html;
                notifyMe("Check value");
                return
            }
            if (value > balance) {
                var html = '<div class="alert alert-warning alert-dismissible" role="alert"><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button><strong>Value too high!</strong> You have specified a too high value.</div>'
                document.getElementById('send_success').innerHTML = html;
                notifyMe("Balance is not enough");
                return
            }
            var messageToSend = { 'message': message }
            try {
                console.log("Sending Message: ", messageToSend);
                var messageTrytes = iota.utils.toTrytes(JSON.stringify(messageToSend));
                console.log("Converted Message into trytes: ", messageTrytes);
                document.getElementById('send_success').innerHTML = "";
                sendTransfer(address, value, messageTrytes);
            } catch (e) {
                console.log(e);
                notifyMe(e.message);
                var html = '<div class="alert alert-warning alert-dismissible" role="alert"><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button><strong>Wrong Format!</strong> Your message contains an illegal character. Make sure you only enter valid ASCII characters.</div>'
                document.getElementById('send_success').innerHTML = html;
            }
        }

        function refresh() {
            showPleaseWait('Get account from ' + host + ":" + port, 100);
            getAccountInfo();
        }

        function showPleaseWait(txt, time) {
            setTimeout(function () {
                $("#txtModal").text(txt);
                $("#pleaseWaitDialog").fadeIn(1000).addClass("in");
                $('<div class="modal-backdrop"></div>').appendTo(document.body);
                $("#pleaseWaitDialog").show();
            }, time);

        }
        function hidePleaseWaitDiv(e, t) {
            $(e).removeClass("in");

            if (t) {
                $(e).hide();
                $(".modal-backdrop").remove();
            }
            else {
                $(e).css('display', 'none');
            }
        }
        if (seed == "") {
            alert("Seed ist nicht gesetzt");
        }
        else {
            SeedSubmit();
        }
    </script>
</body>

</html>